import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.ActionMap;
import javax.swing.InputMap;
import javax.swing.JComponent;
import javax.swing.KeyStroke;

/**
 * Settings dialog that provides options to resume game, save game,
 * return to main menu, or exit the application.
 *
 * @author Jacob
 */
public class settings extends javax.swing.JFrame {
    private mainGame parentGame;

    /**
     * Creates new form settings
     * @param parent The parent frame to center this window on
     */
    public settings(javax.swing.JFrame parent) {
        this.parentGame = (mainGame) parent;
        initComponents();
        
        setupKeyBindings();
        
        // Set the frame size explicitly 
        this.setSize(270, 400);
        
        // Center the window relative to parent
        if (parent != null) {
            setLocationRelativeTo(parent);
        }
    }
    
    /**
     * Sets up a key listener for the Escape key to close this window.
     */
    private void setupKeyBindings() {
        // Get the input map and action map for the content pane
        JComponent contentPane = (JComponent) getContentPane();
        InputMap inputMap = contentPane.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        ActionMap actionMap = contentPane.getActionMap();
        
        Action escAction = new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                resumeActionPerformed(null); // Close window on ESC
            }
        };
        
        // Bind the ESC key to the action
        inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), "escAction");
        actionMap.put("escAction", escAction);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        resume = new javax.swing.JButton();
        saveGame = new javax.swing.JButton();
        mainMenu = new javax.swing.JButton();
        exit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(240, 240, 240));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel1.setLayout(null);

        resume.setFont(new java.awt.Font("Comic Sans MS", 1, 18));
        resume.setText("Resume Game");
        resume.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resumeActionPerformed(evt);
            }
        });
        jPanel1.add(resume);
        resume.setBounds(50, 70, 170, 50);

        saveGame.setFont(new java.awt.Font("Comic Sans MS", 1, 18));
        saveGame.setText("Save Game");
        saveGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveGameActionPerformed(evt);
            }
        });
        jPanel1.add(saveGame);
        saveGame.setBounds(50, 140, 170, 50);

        mainMenu.setFont(new java.awt.Font("Comic Sans MS", 1, 18));
        mainMenu.setText("Main Menu");
        mainMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainMenuActionPerformed(evt);
            }
        });
        jPanel1.add(mainMenu);
        mainMenu.setBounds(50, 210, 170, 50);

        exit.setFont(new java.awt.Font("Comic Sans MS", 1, 18));
        exit.setText("Exit Game");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });
        jPanel1.add(exit);
        exit.setBounds(50, 280, 170, 50);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 271, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 401, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void resumeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resumeActionPerformed
        // Close the settings window
        dispose();
    }//GEN-LAST:event_resumeActionPerformed

    private void saveGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveGameActionPerformed
        // Call the save game function from UserInterface
        UserInterface.saveCurrentGame();
        
        // Show a small confirmation message
        javax.swing.JOptionPane.showMessageDialog(this,
            "Game saved successfully!",
            "Save Game",
            javax.swing.JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_saveGameActionPerformed

    private void mainMenuActionPerformed(java.awt.event.ActionEvent evt) {
        // Close the current game window
        if (parentGame != null) {
            parentGame.dispose();
        }
        
        // Close the settings window
        dispose();
        
        // Use the UserInterface method to show the main menu with proper listeners
        UserInterface.showMainMenu();
    }

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        // Ask for confirmation before exiting
        int confirmed = javax.swing.JOptionPane.showConfirmDialog(this,
            "Are you sure you want to exit the game?",
            "Exit Game",
            javax.swing.JOptionPane.YES_NO_OPTION);
            
        if (confirmed == javax.swing.JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_exitActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton exit;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton mainMenu;
    private javax.swing.JButton resume;
    private javax.swing.JButton saveGame;
    // End of variables declaration//GEN-END:variables
}